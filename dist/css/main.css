@import url("https://fonts.googleapis.com/css?family=Damion|Lato:300,400,700,900");/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css *//**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */html {
  font-family: sans-serif;
 /* 1 */
  -ms-text-size-adjust: 100%;
 /* 2 */
  -webkit-text-size-adjust: 100%;
 /* 2 */;
}/**
 * Remove default margin.
 */body {
  margin: 0;
}/* HTML5 display definitions
   ========================================================================== *//**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary {
  display: block;
}/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */audio,canvas,progress,video {
  display: inline-block;
 /* 1 */
  vertical-align: baseline;
 /* 2 */;
}/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */audio:not([controls]) {
  display: none;
  height: 0;
}/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */[hidden],template {
  display: none;
}/* Links
   ========================================================================== *//**
 * Remove the gray background color from active links in IE 10.
 */a {
  background-color: transparent;
}/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */a:active,a:hover {
  outline: 0;
}/* Text-level semantics
   ========================================================================== *//**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */abbr[title] {
  border-bottom: 1px dotted;
}/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */b,strong {
  font-weight: bold;
}/**
 * Address styling not present in Safari and Chrome.
 */dfn {
  font-style: italic;
}/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */h1 {
  font-size: 2em;
  margin: 0.67em 0;
}/**
 * Address styling not present in IE 8/9.
 */mark {
  background: #ff0;
  color: #000;
}/**
 * Address inconsistent and variable font size in all browsers.
 */small {
  font-size: 80%;
}/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */sub,sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}/* Embedded content
   ========================================================================== *//**
 * Remove border when inside `a` element in IE 8/9/10.
 */img {
  border: 0;
}/**
 * Correct overflow not hidden in IE 9/10/11.
 */svg:not(:root) {
  overflow: hidden;
}/* Grouping content
   ========================================================================== *//**
 * Address margin not present in IE 8/9 and Safari.
 */figure {
  margin: 1em 40px;
}/**
 * Address differences between Firefox and other browsers.
 */hr {
  box-sizing: content-box;
  height: 0;
}/**
 * Contain overflow in all browsers.
 */pre {
  overflow: auto;
}/**
 * Address odd `em`-unit font size rendering in all browsers.
 */code,kbd,pre,samp {
  font-family: monospace, monospace;
  font-size: 1em;
}/* Forms
   ========================================================================== *//**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 *//**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */button,input,optgroup,select,textarea {
  color: inherit;
 /* 1 */
  font: inherit;
 /* 2 */
  margin: 0;
 /* 3 */;
}/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */button {
  overflow: visible;
}/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */button,select {
  text-transform: none;
}/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */button,html input[type="button"],input[type="reset"],input[type="submit"] {
  -webkit-appearance: button;
 /* 2 */
  cursor: pointer;
 /* 3 */;
}/**
 * Re-set default cursor for disabled elements.
 */button[disabled],html input[disabled] {
  cursor: default;
}/**
 * Remove inner padding and border in Firefox 4+.
 */button::-moz-focus-inner,input::-moz-focus-inner {
  border: 0;
  padding: 0;
}/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */input {
  line-height: normal;
}/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */input[type="checkbox"],input[type="radio"] {
  box-sizing: border-box;
 /* 1 */
  padding: 0;
 /* 2 */;
}/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */input[type="number"]::-webkit-inner-spin-button,input[type="number"]::-webkit-outer-spin-button {height: auto;}/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */input[type="search"] {-webkit-appearance: textfield; /* 1 */box-sizing: content-box; /* 2 */}/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration {-webkit-appearance: none;}/**
 * Define consistent border, margin, and padding.
 */fieldset {border: 1px solid #c0c0c0;margin: 0 2px;padding: 0.35em 0.625em 0.75em;}/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */legend {
  border: 0;
 /* 1 */
  padding: 0;
 /* 2 */;
}/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */textarea {
  overflow: auto;
}/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */optgroup {font-weight: bold;}/* Tables
   ========================================================================== *//**
 * Remove most spacing between table cells.
 */table {border-collapse: collapse;border-spacing: 0;}td,th {padding: 0;}*,*:after,*:before {box-sizing: border-box;}* {font-size: 100.1%;}body {font: 1rem/1.5 Gilroy, Arial, Helvetica, sans-serif;margin: 0;color: #444;background: #fff;}form,fieldset {margin: 0;padding: 0;border: 0;}a {color: #0da5af;text-decoration: none;transition: color 0.3s ease;}a:hover {text-decoration: none;}img {max-width: 100%;height: auto;}.clearfix:after {content: '';display: block;clear: both;}.ellipsis {white-space: nowrap; /* 1 */text-overflow: ellipsis; /* 2 */overflow: hidden;}body {background: #fff;margin: 0;font-weight: normal;font-family: Lato, Arial, Helvetica, sans-serif;}.logo {line-height: 1;font-family: Damion, Arial, Helvetica, sans-serif;text-transform: lowercase;}.logo a {font-size: 3.125rem;}h1,h2,h3,h4 {margin: 0;text-align: center;font-weight: lighter;text-transform: uppercase;padding-bottom: 10px;}h1 {font-size: 3.75rem;}h2 {font-size: 1.875rem;}h3 {font-size: 1.25rem;text-transform: uppercase;padding-bottom: 5px;}h3 span {color: #ec9da2;}p {margin: 0;text-align: center;font-weight: lighter;font-size: 0.875rem;}.page {position: relative;overflow: hidden;}.container {margin: auto;max-width: 1100px;color: #fff;padding: 60px 15px;}.header {position: fixed;width: 100vw;z-index: 10;}.header-container {margin: 0 auto;max-width: 1100px;width: 100%;display: -ms-flexbox;display: flex;-ms-flex-pack: justify;justify-content: space-between;-ms-flex-align: end;align-items: flex-end;padding: 0 15px 0;}.nav {font-size: 18px;}.nav ul li {width: 100px;text-align: center;}.nav ul li a {display: block;}.nav ul li a:hover {background-color: rgba(255, 255, 255, 0.2);border-radius: 0 0 5px 5px;padding-top: 30px;margin-top: -30px;}.nav-btn {display: none;position: relative;left: auto;right: auto;width: 24px;z-index: 2;list-style: none;margin: 10px;}.nav-btn span,.nav-btn:before,.nav-btn:after {position: absolute;left: 0;right: 0;content: "";height: 3px;background: #fff;top: 50%;margin-top: -1px;}.nav-btn:after {margin-top: 5px;}.nav-btn:before {margin-top: -7px;}a {text-decoration: none;color: white;}ul {padding: 0;margin: 0;display: -ms-flexbox;display: flex;list-style: none;}::-webkit-input-placeholder { /* Chrome/Opera/Safari */color: #75b4aa;}::-moz-placeholder { /* Firefox 19+ */color: #75b4aa;}:-ms-input-placeholder { /* IE 10+ */color: #75b4aa;}:-moz-placeholder { /* Firefox 18- */color: #75b4aa;}form input,form span,form label,form textarea,form select {cursor: pointer;}.sl__box {position: relative;height: 100%;}.sl__text {position: absolute;top: 50%;left: 50%;transform: translate(-50%, -50%);background: rgba(255, 255, 255, 0.3);color: #74c7d5;display: -ms-flexbox;display: flex;padding: 20px 40px;line-height: 1;border-radius: 3px;}.sl__caption {margin: auto;line-height: 0.8;font-size: 3.75rem;font-weight: lighter;text-transform: none;white-space: nowrap;text-align: right;}.sl__par {margin: 0;padding: 0 0 0 20px;font-size: 7.5rem;font-weight: 900;text-transform: uppercase;}.slick-dots li button {background: rgba(255, 255, 255, 0.5);border-radius: 50%;}.slick-dots li button:before {content: '';}.slick-dots li button:hover,.slick-dots li.slick-active button {background: #74c7d5;border-radius: 50%;}.slick-dots li button:hover:before,.slick-dots li.slick-active button:before {background: #74c7d5;border-radius: 50%;}.slick-dots {position: absolute;bottom: 50px;display: block;width: 100%;padding: 0;margin: 0;list-style: none;text-align: center;}.slick-dots li {margin: 0 20px;}.slick-dotted.slick-slider {margin-bottom: 0;}.slick-prev,.slick-next {z-index: 1001;}.slick-prev {left: 1.5rem;}.slick-next {right: 1.5rem;transform: translate(-100%, 0);}.slick-prev:before,.slick-next:before {font-size: 3rem;}.slick-prev:before {content: "<";}.slick-next:before {content: ">";}.block:not(:target),.footer {display: none;}.block:target {display: block;}.block {margin: 0;padding: 0;width: 100vw;min-height: 100vh;background-repeat: no-repeat;background-size: cover;background-position: 50% 50%;}.block-header {padding-bottom: 20px;}.block-home {background-color: #2d3f51;min-height: 0;}.block-services {background-image: url(../images/bgServices.jpg);}.block-services-middle {height: 100px;}.block-services-img {width: 120px;height: 120px;border-radius: 50%;background-color: #fff;margin: 0 auto 10px;position: relative;}.block-services-img:before {content: '';width: 140px;height: 140px;border: 5px solid #fff;position: absolute;border-radius: 50%;z-index: 2;transform: translate(-10px, -10px);}.block-services-img img {top: 50%;left: 50%;margin-right: -50%;transform: translate(-50%, -50%);position: absolute;}.block-services-main {background-color: #c45158;}.block-services-main h2 {margin: 0 auto 10px;}.block-about {background-image: url(../images/bgAbout.jpg);text-align: center;}.block-about-main {background-color: #5b4b59;width: 260px;height: 400px;padding: 40px 25px;position: relative;}.block-about-main:hover {cursor: pointer;}.block-about-main:hover .block-about-img-ink_hover {opacity: 1;}.block-about-main:hover .block-about-name {color: #fff;}.block-about-main:hover .block-about-position {color: #ff8973;}.block-about-main:hover .block-about-facebook {border-color: #4f689e;background-color: #4f689e;}.block-about-main:hover .block-about-twitter {border-color: #74c7d5;background-color: #74c7d5;}.block-about-main:hover .block-about-google-plu {border-color: #df5c64;background-color: #df5c64;}.block-about-main:hover .block-about-linkedin2 {border-color: #3e61af;background-color: #3e61af;}.block-about-middle {-ms-flex-direction: column;flex-direction: column;}.block-about-text {background-color: #a1ca6c;border-radius: 5px;margin: auto auto 0;padding: 15px 40px;}.block-about-triangle {margin: 0 auto;border: 20px solid transparent;border-top: 20px solid #a1ca6c;}.block-about-img {width: 150px;height: 150px;border-radius: 50%;background-color: #fff;margin: 0 auto 10px;padding: 0 0 20px;position: relative;background: url(./images/incognita.png) no-repeat;}.block-about-img-ink_hover {opacity: 0;}.block-about-img:before {content: '';width: 155px;height: 155px;border: 5px solid #a1859e;position: absolute;border-radius: 50%;z-index: 2;transform: translate(-2.5px, -2.5px);top: 0;left: 0;}.block-about-img:after {content: '';width: 145px;height: 145px;border: 2px solid #fff;position: absolute;border-radius: 50%;z-index: 2;transform: translate(2.5px, 2.5px);top: 0;left: 0;background: url(./images/incognita.png) no-repeat;}.block-about-img img {border-radius: 50%;top: 0;left: 0;position: absolute;}.block-about-name {font-size: 1.5rem;color: #c7b6c5;padding: 0 0 14px;font-weight: bold;text-transform: uppercase;}.block-about-position {font-size: 0.875rem;color: #a1ca6c;padding: 0 0 40px;}.block-about-social {position: absolute;bottom: 40px;left: 0;right: 0;}.block-about-social ul {display: -ms-flexbox;display: flex;-ms-flex-pack: center;justify-content: center;}.block-about-social ul li {border: 12px solid #a1859e;border-radius: 50%;margin: 0 2px;background-color: #a1859e;}.block-about-facebook,.block-about-twitter,.block-about-google-plu,.block-about-linkedin2 {font-size: 0.875rem;}.block-work {background-image: url(../images/bgWork.jpg);}.block-work-portfolio {width: 100%;border-top: 1px solid #94b963;border-bottom: 1px solid #94b963;font-weight: bold;font-size: 1rem;display: -ms-flexbox;display: flex;-ms-flex-pack: justify;justify-content: space-between;padding: 20px 20px 20px 10px;}.block-work-portfolio-logo {font-size: 1.25rem;}.block-work-portfolio-nav ul li {width: 130px;padding: 0 10px;}.block-work-portfolio-nav ul li a:hover {background-color: #f5c149;border-radius: 5px;padding: 0;margin: 0;}.block-work-main {width: 23%;background-color: #eeeeee;color: #939393;border-radius: 4px;margin: 0 0 20px 0;font-size: 0.875rem;text-align: center;display: -ms-flexbox;display: flex;-ms-flex-direction: column;flex-direction: column;cursor: pointer;}.block-work-main img {width: 100%;height: auto;border-radius: 4px 4px 0 0;}.block-work-main p {padding-bottom: 5px;text-transform: uppercase;padding-top: 10px;}.block-work-main-img {width: 100%;height: 100%;line-height: 0;background-color: #3d4d29;border-radius: 4px 4px 0 0;position: relative;}.block-work-main-img span {width: 50px;height: 50px;border: 2px solid #eeeeee;position: absolute;border-radius: 50%;top: 50%;right: 50%;transform: translate(50%, -50%);display: none;}.block-work-main-img span:after,.block-work-main-img span:before {position: absolute;left: 10px;right: 10px;content: '';height: 2px;background: #eeeeee;top: 50%;margin-top: -1px;}.block-work-main-img span:before {transform: rotate(90deg);}.block-work-main-img:hover img {opacity: 0.7;}.block-work-main-img:hover span {display: block;z-index: 1;}.block-work-trian {text-align: center;position: relative;}.block-work-triangle {border: 10px solid transparent;border-bottom: 10px solid #eeeeee;position: absolute;top: -20px;}.block-contacts {background-image: url(../images/bgContacts.jpg);padding: 80px;}.block-contacts h2 {display: block;text-transform: none;text-align: left;}.block-contacts h3 {color: #c0dfda;text-transform: none;text-align: left;padding-bottom: 19px;}.block-contacts p {text-align: justify;font-size: 1rem;}.block-contacts a {font-size: 1rem;margin-left: 20px;}.block-contacts-address {width: 48%;text-align: center;padding-bottom: 5px;}.block-contacts-address-phm {width: 49%;height: 83%;display: inline-block;vertical-align: bottom;}.block-contacts-address-phm iframe {width: 100%;height: 100%;border-style: none;vertical-align: bottom;}.block-contacts-address table {margin-top: 25%;}.block-contacts-address td {color: #c0dfda;}.block-contacts-question {width: 48%;min-height: 100px;padding-bottom: 5px;}.block-contacts-form {position: relative;}.block-contacts-form-bname {margin: 0 auto;display: -ms-flexbox;display: flex;-ms-flex-pack: justify;justify-content: space-between;width: 100%;padding: 0 0 30px 0;}.block-contacts-form-bname-label {width: 49%;height: 60px;background-color: #68a097;border: 0;border-radius: 3px;color: #82c8bd;font-size: 1rem;line-height: 60px;padding: 0 15px 0;}.block-contacts-form-bname-input {width: 49%;height: 60px;border: 0;border-radius: 3px;}.block-contacts-form-textarea {width: 100%;background-color: #68a097;border: 0;border-radius: 3px;margin: 0 auto;display: block;height: 168px;resize: none;line-height: 60px;padding: 0 15px 0;}.block-contacts-form-submit {width: 49%;height: 45px;border: 0;border-radius: 3px;text-transform: uppercase;background: #df5c64;font: 700 2rem Lato, sans-serif;border-bottom: 4px solid #c8535a;position: absolute;transform: translate(50%, 50%);}.block-middle {font-weight: bold;font-size: 1.5rem;display: -ms-flexbox;display: flex;padding-bottom: 20px;}.block-main-container {display: -ms-flexbox;display: flex;-ms-flex-pack: justify;justify-content: space-between;-ms-flex-wrap: wrap;flex-wrap: wrap;}.block-main {width: 23%;padding: 40px 25px;margin: 0 0 10px;}.footer {padding: 20px 0;background-color: #68a097;}.footer-container {display: -ms-flexbox;display: flex;-ms-flex-pack: center;justify-content: center;}.footer ul {display: -ms-flexbox;display: flex;color: #fff;}.footer ul li {border: 20px solid #82c7bc;border-radius: 50%;margin: 0 10px;background-color: #82c7bc;}.footer-icon {font-size: 2rem;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-black-webfont.woff2") format("woff2"), url("../fonts/gilroy-black-webfont.woff") format("woff");font-weight:900;font-style:normal;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-blackitalic-webfont.woff2") format("woff2"), url("../fonts/gilroy-blackitalic-webfont.woff") format("woff");font-weight:900;font-style:italic;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-bold-webfont.woff2") format("woff2"), url("../fonts/gilroy-bold-webfont.woff") format("woff");font-weight:700;font-style:normal;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-bolditalic-webfont.woff2") format("woff2"), url("../fonts/gilroy-bolditalic-webfont.woff") format("woff");font-weight:700;font-style:italic;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-extrabolditalic-webfont.woff2") format("woff2"), url("../fonts/gilroy-extrabolditalic-webfont.woff") format("woff");font-weight:800;font-style:italic;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-extrabold-webfont.woff2") format("woff2"), url("../fonts/gilroy-extrabold-webfont.woff") format("woff");font-weight:800;font-style:normal;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-light-webfont.woff2") format("woff2"), url("../fonts/gilroy-light-webfont.woff") format("woff");font-weight:300;font-style:normal;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-lightitalic-webfont.woff2") format("woff2"), url("../fonts/gilroy-lightitalic-webfont.woff") format("woff");font-weight:300;font-style:italic;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-medium-webfont.woff2") format("woff2"), url("../fonts/gilroy-medium-webfont.woff") format("woff");font-weight:500;font-style:normal;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-mediumitalic-webfont.woff2") format("woff2"), url("../fonts/gilroy-mediumitalic-webfont.woff") format("woff");font-weight:500;font-style:italic;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-regularitalic-webfont.woff2") format("woff2"), url("../fonts/gilroy-regularitalic-webfont.woff") format("woff");font-weight:400;font-style:italic;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-regular-webfont.woff2") format("woff2"), url("../fonts/gilroy-regular-webfont.woff") format("woff");font-weight:400;font-style:normal;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-semibold-webfont.woff2") format("woff2"), url("../fonts/gilroy-semibold-webfont.woff") format("woff");font-weight:600;font-style:normal;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-semibolditalic-webfont.woff2") format("woff2"), url("../fonts/gilroy-semibolditalic-webfont.woff") format("woff");font-weight:600;font-style:italic;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-thinitalic-webfont.woff2") format("woff2"), url("../fonts/gilroy-thinitalic-webfont.woff") format("woff");font-weight:100;font-style:italic;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-thin-webfont.woff2") format("woff2"), url("../fonts/gilroy-thin-webfont.woff") format("woff");font-weight:100;font-style:normal;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-ultralightitalic-webfont.woff2") format("woff2"), url("../fonts/gilroy-ultralightitalic-webfont.woff") format("woff");font-weight:200;font-style:italic;}@font-face {font-family:Gilroy;src:url("../fonts/gilroy-ultralight-webfont.woff2") format("woff2"), url("../fonts/gilroy-ultralight-webfont.woff") format("woff");font-weight:200;font-style:normal;}@font-face {font-family:icomoon;src:url("../fonts/icomoon.woff2") format("woff2"), url("../fonts/icomoon.woff") format("woff");font-weight:normal;font-style:normal;}@media screen and (max-width: 767px) {* {font-size: 0.875rem;}.logo a {font-size: 2.25rem;}.container {padding: 40px 10px;}.nav {display: none;}.nav-btn {display: block;}.sl__text {padding: 10px 20px;}.sl__caption {font-size: 1.75rem;}.sl__par {font-size: 3.75rem;}.slick-prev {left: 1.25rem;}.slick-next {right: 1.25rem;}.slick-prev:before,.slick-next:before {font-size: 1.5rem;}.block-home {background-image: none;}.block-services {background-image: none;background-color: #b24a50;}.block-about {background-image: none;background-color: #665464;}.block-about-text {padding: 10px 30px;}.block-about-triangle {border: 10px solid transparent;border-top: 10px solid #a1ca6c;}.block-work {background-image: none;background-color: #83a457;}.block-work-main {width: 48.5%;}.block-work-triangle {border: 10px solid transparent;border-bottom: 10px solid #eeeeee;}.block-contacts {background-image: none;background-color: #75b4aa;padding: 20px 5px;}.block-contacts-address {width: 100%;}.block-contacts-question {width: 100%;}.block-contacts-form-bname-label {width: 48.5%;}.block-contacts-form-bname-input {width: 48.5%;}.block-contacts-form-submit {font-size: 1.75rem;}.block-main {width: 48.5%;}.footer {padding: 10px 0;margin-top: -30px;}.footer ul li {border: 20px solid #82c7bc;}}@media screen and (max-width: 375px) {* {font-size: 0.75rem;}.logo a {font-size: 1.5rem;}.container {padding: 20px 5px;}.sl__text {padding: 5px 10px;}.sl__caption {font-size: 1rem;}.sl__par {font-size: 2rem;}.slick-prev {left: 1rem;}.slick-next {right: 1rem;}.slick-prev:before,.slick-next:before {font-size: 1rem;}.block-about-text {padding: 5px 20px;}.block-about-triangle {border: 5px solid transparent;border-top: 5px solid #a1ca6c;}.block-work-main {width: 100%;}.block-work-triangle {border: 10px solid transparent;border-bottom: 10px solid #eeeeee;}.block-contacts-address-phm {width: 100%;height: 42%;padding-top: 5px;}.block-contacts-address table {margin-top: 0;}.block-contacts-form-bname {-ms-flex-wrap: wrap;flex-wrap: wrap;padding: 0 0 10px 0;}.block-contacts-form-bname-label {width: 100%;height: 40px;line-height: 40px;margin-bottom: 10px;}.block-contacts-form-bname-input {width: 100%;height: 40px;}.block-contacts-form-submit {font-size: 1.5rem;}.block-main {width: 100%;}}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
